
R version 2.11.1 Patched (2010-09-30 r53135)
Copyright (C) 2010 The R Foundation for Statistical Computing
ISBN 3-900051-07-0

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> 
> library("slam")
> set.seed(201008)
> 
> ## test
> x <- matrix(sample(c(0,1), 100L, TRUE, prob = c(.9,.1)), 5L)
> dim(x)
[1]  5 20
> INDEX <- sample(1:4, 20L, TRUE)
> 
> s <- as.simple_triplet_matrix(x)
> z <- as.matrix(s)
> 
> identical(rollup(z, 2L, INDEX, sum), 
+ 	  as.matrix(rollup(s, 2L, INDEX, sum)))
[1] TRUE
> identical(rollup(t(z), 1L, INDEX, sum), 
+ 	  as.matrix(rollup(t(s), 1L, INDEX, sum)))
[1] TRUE
> 
> ## NA indexes
> k <- INDEX
> is.na(k) <- k == 1L
> any(is.na(k))
[1] TRUE
> identical(as.matrix(rollup(s, 2L, k, sum)), 
+ 	  rollup(z, 2L, k, sum))
[1] TRUE
Warning message:
NA(s) in 'index' 
> 
> ## other data types
> s$v <- as.integer(s$v)
> 
> identical(rollup(z, 2L, INDEX, sum), 
+ 	  as.matrix(rollup(s, 2L, INDEX, sum)))
[1] TRUE
> 
> ## NA values
> is.na(s$v) <- 1:2
> z   <- as.matrix(s)
> z[] <- as.double(z) # coerce
> 
> identical(rollup(z, 2L, INDEX, sum), 
+ 	  as.matrix(rollup(s, 2L, INDEX, sum)))
[1] TRUE
> identical(rollup(z, 2L, INDEX, sum, na.rm = TRUE), 
+ 	  as.matrix(rollup(s, 2L, INDEX, sum, na.rm = TRUE)))
[1] TRUE
> 
> ##
> s$v <- as.double(s$v)
> 
> identical(rollup(z, 2L, INDEX, sum, na.rm = TRUE), 
+ 	  as.matrix(rollup(s, 2L, INDEX, sum, na.rm = TRUE)))
[1] TRUE
> 
> 
> ##
> s <- as.simple_sparse_array(s)
> z <- as.array(z)
> 
> identical(rollup(z, 2L, INDEX, sum, na.rm = TRUE),
+ 	  as.array(rollup(s, 2L, INDEX, sum, na.rm = TRUE)))
[1] TRUE
> 
> ##
> INDEX <- rep(1, dim(x)[2L])
> 
> identical(rollup(z, 2L, INDEX, sum, na.rm = TRUE),
+ 	  as.array(rollup(s, 2L, INDEX, sum, na.rm = TRUE)))
[1] TRUE
> 
> s <- as.simple_triplet_matrix(s)
> identical(rollup(z, 2L, INDEX, sum, na.rm = TRUE),
+ 	  as.array(rollup(s, 2L, INDEX, sum, na.rm = TRUE)))
[1] TRUE
> ###
> 
