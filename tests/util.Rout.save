
R version 3.3.2 (2016-10-31) -- "Sincere Pumpkin Patch"
Copyright (C) 2016 The R Foundation for Statistical Computing
Platform: i686-pc-linux-gnu (32-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> 
> library("slam")
> 
> ##
> .Call(slam:::R_part_index, factor(rep(1L, 4L)))
[1] 1 2 3 4
attr(,"table")
[1] 4
> .Call(slam:::R_part_index, factor(1:4))
[1] 1 1 1 1
attr(,"table")
[1] 1 1 1 1
> .Call(slam:::R_part_index, factor(c(1L,2L,2L,1L)))
[1] 1 1 2 2
attr(,"table")
[1] 2 2
> .Call(slam:::R_part_index, factor(c(1L,2L,NA,1L)))
[1]  1  1 NA  2
attr(,"table")
[1] 2 1
> 
> ##
> i <- 1:27
> x <- arrayInd(i, .dim = c(3L,3L,3L))
> .Call(slam:::R_vector_index, c(3L,3L,3L), x)
 [1]  1  2  3  4  5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25
[26] 26 27
> x[14L, 2L] <- NA
> .Call(slam:::R_vector_index, c(3L,3L,3L), x)
 [1]  1  2  3  4  5  6  7  8  9 10 11 12 13 NA 15 16 17 18 19 20 21 22 23 24 25
[26] 26 27
> 
> ##
> v <- c(1L,1L)
> p <- matrix(c(1L,2L,3L, 2L,2L,2L), nrow = 2L, byrow = TRUE)
> .Call(slam:::R_ini_array, c(3L,3L,3L), p, v, 2L)
, , 1

     [,1] [,2] [,3]
[1,]    0    0    0
[2,]    0    0    0
[3,]    0    0    0

, , 2

     [,1] [,2] [,3]
[1,]    0    0    0
[2,]    0    1    0
[3,]    0    0    0

, , 3

     [,1] [,2] [,3]
[1,]    0    0    0
[2,]    0    0    0
[3,]    0    0    0

> .Call(slam:::R_ini_array, c(3L,3L,3L), p, as.logical(v), 2L)
, , 1

      [,1]  [,2]  [,3]
[1,] FALSE FALSE FALSE
[2,] FALSE FALSE FALSE
[3,] FALSE FALSE FALSE

, , 2

      [,1]  [,2]  [,3]
[1,] FALSE FALSE FALSE
[2,] FALSE  TRUE FALSE
[3,] FALSE FALSE FALSE

, , 3

      [,1]  [,2]  [,3]
[1,] FALSE FALSE FALSE
[2,] FALSE FALSE FALSE
[3,] FALSE FALSE FALSE

> .Call(slam:::R_ini_array, c(3L,3L,3L), p, as.double(v), 2L)
, , 1

     [,1] [,2] [,3]
[1,]    0    0    0
[2,]    0    0    0
[3,]    0    0    0

, , 2

     [,1] [,2] [,3]
[1,]    0    0    0
[2,]    0    1    0
[3,]    0    0    0

, , 3

     [,1] [,2] [,3]
[1,]    0    0    0
[2,]    0    0    0
[3,]    0    0    0

> .Call(slam:::R_ini_array, c(3L,3L,3L), p, as.raw(v), 2L)
, , 1

     [,1] [,2] [,3]
[1,]   00   00   00
[2,]   00   00   00
[3,]   00   00   00

, , 2

     [,1] [,2] [,3]
[1,]   00   00   00
[2,]   00   01   00
[3,]   00   00   00

, , 3

     [,1] [,2] [,3]
[1,]   00   00   00
[2,]   00   00   00
[3,]   00   00   00

> .Call(slam:::R_ini_array, c(3L,3L,3L), p, as.complex(v), 2L)
, , 1

     [,1] [,2] [,3]
[1,] 0+0i 0+0i 0+0i
[2,] 0+0i 0+0i 0+0i
[3,] 0+0i 0+0i 0+0i

, , 2

     [,1] [,2] [,3]
[1,] 0+0i 0+0i 0+0i
[2,] 0+0i 1+0i 0+0i
[3,] 0+0i 0+0i 0+0i

, , 3

     [,1] [,2] [,3]
[1,] 0+0i 0+0i 0+0i
[2,] 0+0i 0+0i 0+0i
[3,] 0+0i 0+0i 0+0i

> .Call(slam:::R_ini_array, c(3L,3L,3L), p, as.character(v), 2L)
, , 1

     [,1] [,2] [,3]
[1,] ""   ""   ""  
[2,] ""   ""   ""  
[3,] ""   ""   ""  

, , 2

     [,1] [,2] [,3]
[1,] ""   ""   ""  
[2,] ""   "1"  ""  
[3,] ""   ""   ""  

, , 3

     [,1] [,2] [,3]
[1,] ""   ""   ""  
[2,] ""   ""   ""  
[3,] ""   ""   ""  

> .Call(slam:::R_ini_array, c(3L,3L,3L), p, as.list(v), 2L)
, , 1

     [,1] [,2] [,3]
[1,] NULL NULL NULL
[2,] NULL NULL NULL
[3,] NULL NULL NULL

, , 2

     [,1] [,2] [,3]
[1,] NULL NULL NULL
[2,] NULL 1    NULL
[3,] NULL NULL NULL

, , 3

     [,1] [,2] [,3]
[1,] NULL NULL NULL
[2,] NULL NULL NULL
[3,] NULL NULL NULL

> .Call(slam:::R_ini_array, c(3L,3L,3L), p, as.expression(v), 2L)
expression(NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 
    NULL, NULL, NULL, NULL, 1L, NULL, NULL, NULL, NULL, NULL, 
    NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL)
> 
> .Call(slam:::R_ini_array, 3L, c(1L,2L), c(1L,1L), 2L)
[1] 0 1 0
> 
> .Call(slam:::R_split_col, array(c(1L,2L), c(2L, 2L)))
[[1]]
[1] 1 2

[[2]]
[1] 1 2

> 
> ##
> x <- matrix(c(1L,1L,1L,1L,1L,2L,1L,3L,1L,2L), 
+ 	    ncol = 2, byrow = TRUE)
> x
     [,1] [,2]
[1,]    1    1
[2,]    1    1
[3,]    1    2
[4,]    1    3
[5,]    1    2
> .Call(slam:::R_match_matrix, x, NULL, NULL)
[[1]]
[1] 1 1 2 3 2

[[2]]
[1] 1 3 4

> .Call(slam:::R_match_matrix, x, x[1:3,], 0L)
[[1]]
[1] 1 1 2 3 2

[[2]]
[1] 1 1 2

> .Call(slam:::R_match_matrix, x, matrix(0L, 0, 2), 0L)
[[1]]
[1] 1 1 2 3 2

[[2]]
integer(0)

> 
> 
> ##
> x <- matrix(c(1L,2L,2L,2L,NA,1L,NA,2L,NA,NA), 
+ 	    ncol = 2, byrow = TRUE)
> x
     [,1] [,2]
[1,]    1    2
[2,]    2    2
[3,]   NA    1
[4,]   NA    2
[5,]   NA   NA
> .Call(slam:::R_all_row, x > 1L, FALSE)
[1] FALSE  TRUE    NA    NA    NA
> .Call(slam:::R_all_row, x > 1L, TRUE)
[1] FALSE  TRUE FALSE  TRUE  TRUE
> 
> ###
> 
> proc.time()
   user  system elapsed 
  0.244   0.024   0.263 
